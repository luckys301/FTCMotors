ToDo List:
    Add Improved Tank Drive into MecDrive
    Implement Feedforward to all Mechanisms: https://docs.ftclib.org/ftclib/features/controllers
        Trapezoid Motion Profiling
            Find Max Velocity/Acceleration after Tuning by using ArmFeedforward.maxAchievableAcceleration
    Add Units to Mechanisms (Degrees + mm)
    How to do Follower Motor - Maybe Reverse Motor?
    CHANGE ALL MOTORS TO NEBULA MOTORS
    TRANSFER ALL DRIVETRAIN CONSTANTS into NEBULA CONSTANTS
    Shooter
    Intake - SetPower and at least pid Both Options
    Look at ProfiledPIDController
    Look at Faster Gradle Times - Document for future easy access
    Type in the Type of Motor in Nebula Constants like the RPM of the Motor
    Servo Shooter Hood
    Add the accumulated time of the total CycleTracker
    To Think How should I do setSetPoint
    Driver Override button for the minimum and maximum positions
    Add Static for Nebula Constants

Documentation: https://docs.ftclib.org/ftclib/
Turning in a Certain Direction //Check if this works for other angles
    // Turns counter clockwise
    drive.turn(Math.toRadians(180) + 1e-6);

    // Turns clockwise
    drive.turn(Math.toRadians(180) - 1e-6);

Test:
    Test Anti-Tip
    See if Roadrunner Values show up on Dashboard and are changeable
    Test Align to a Direction - Teleop
        Alignment to something with PID in teleop
    Test Potentiometer for accurate Arm Movements

Testing Github CodeSpace

Done:
    Create Six Wheel Drives
        Add DefaultDriveCommand with Anti-Tip
    Implement Through Bore Encoder
    Test Nebula Motor and Servo - Works
    Test Cycle Tracker - Works
    Test Angles on Servo - Doesn't Work, but positional works